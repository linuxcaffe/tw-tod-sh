#! /bin/bash
#
# tod.sh
# Copyright (C) 2015 djp <djp@transit>
#
# Distributed under terms of the MIT license.
#

# tw-tod-sh
# taskwarrior time-of-day shell script
USAGE="tod [help|all|none|morn|aft|day|eve|night]"
TASK=task
TASKRC=
INSTALL_DIR="$HOME/.task/scripts/tw-tod-sh"
TOD_RC_FILE="$INSTALL_DIR/tod.rc"
TOD_CONFIG=`task _get rc.tod`
TOD_TMP="$HOME/.task/rc.tmp"
TMP_HEADER="# TOD TEMP FILE -- GENERATED BY ToD.sh on $DATE -- DO NOT EDIT"
#echo $TMP_HEADER > $TOD_TMP
REPORTS="ls,ready"
REPORT_A="ready"
REPORT_B="ls"

# SET PATTERNS
TOD_FILTER_PATTERN="\(\s+[ -|morn|aft|day|eve|night|any]+[\s\)]."
RPT_ANY_PATTERN="^report[.a-z]+filter="
SED_RM_RPT_PATTERN="s/^report[.a-z]+filter=//"
SED_RM_TOD_PATTERN="s/\(\s+[ -|morn|aft|day|eve|night|any]+[\s\)].//"
SED_TRIM_WS="sed -r 's/^\s*//' |sed -r 's/\s*$//'"
FILTER_A_PATTERN="^report\.$REPORT_A\.filter="
FILTER_B_PATTERN="^report\.$REPORT_B\.filter="
SEPARATOR_PATTERN="[_ ]+"

function pause(){
  read -ep "$*"
  }


# TODO test for $TOD_TMP file readable/ writable

RC_OTHER=`egrep -v "^$|^#+|^report." $TOD_TMP`
#echo "rc_other = $RC_OTHER"
# GET BASE
cp $TOD_TMP $INSTALL_DIR/tmp.tmp
echo "$TMP_HEADER" > $TOD_TMP
BASE_A=`task _get rc.report.$REPORT_A.filter |sed -r 's/\s*$//'`
#echo "$LINENO: base 1: $BASE_A"
BASE_B=`task _get rc.report.$REPORT_B.filter |sed -r 's/\s*$//'`
#echo "$LINENO: base 2: $BASE_B"
mv $INSTALL_DIR/tmp.tmp $TOD_TMP


# GET FIELD 2

FIELD_2A=`egrep "$FILTER_A_PATTERN" $TOD_TMP |cut -d'_' -f2 |sed -r 's/\s*$//'`
FIELD_2B=`egrep "$FILTER_B_PATTERN" $TOD_TMP |cut -d'_' -f2 |sed -r 's/\s*$//'`
#echo "$LINENO filter 2a = $FILTER_2A"
#echo "$LINENO filter 2b = $FILTER_2B"


# TOD FILTERS
T_ANY="( +morn +aft +day +eve +night )"
T_MORN="( -aft -eve -night )"
T_AFT="( -morn -eve -night )"
T_DAY="( -eve -night )"
T_EVE="( -aft -morn -day )"
T_NIGHT="( -morn -aft -day -eve )"

declare -A day=([value]='( -eve -night )' [word]=day [hr]=8 ) 
declare -A morn=([value]='( -aft -eve -night )' [word]=morning [hr]=8 ) 
declare -A aft=([value]='( -morn -eve -night )' [word]=afternoon [hr]=13 ) 
declare -A eve=([value]='( -day -morn -aft )' [word]=evening [hr]=18 ) 
declare -A night=([value]='( -day -morn -aft -eve )' [word]=night [hr]=22 ) 

if [[ "$1" == "" ]]; then
		
	# TIME OF DAY REPORT
	DATE=`date`
	FORTUNE=`fortune`
	printf '%*s\n' 167 '' | tr ' ' -
echo
echo "         Time of Day Report, $DATE"
echo
echo "              Good ${TOD_CONFIG[word]} !"
echo
echo "         $FORTUNE"
echo
	printf '%*s\n' 167 '' | tr ' ' -
echo $USAGE	

	# PROMPT
	read -ep "   ToD >" prompt
#	echo
	# these options make no changes

	if [[ "$promot" == $TOD_CONFIG ]]; then
		echo "Time of Day is already set to $TOD_CONFIG, no changes made"
		pause 'Press <CR> to continue...'
		ToD
		exit 0

	elif [[ "$prompt" =~ h|help ]]; then
		echo "there is no help for you"
		cat $INSTALL_DIR/tod.txt
		pause 'Press <CR> to continue...'
		ToD
		exit 0

	# these options DO make changes.

	elif [[ "$prompt" == "none" ]]; then
		echo "No more ToD filtering (for now)"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod none
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _ _" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_B _$FIELD_2B _ _" >> $TOD_TMP
		ToD
		exit 0

	elif [[ "$prompt" == "morn" ]]; then
		echo "ToD filter will be changed to $prompt"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod $prompt
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_MORN _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_MORN _" >> $TOD_TMP
		ToD
		exit 0

	elif [[ "$prompt" == "aft" ]]; then
		echo "ToD filter will be changed to $prompt"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod $prompt
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_AFT _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_AFT _" >> $TOD_TMP
		ToD
		exit 0

	elif [[ "$prompt" == "day" ]]; then
		echo "ToD filter will be changed to $prompt"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod $prompt
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_DAY _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_DAY _" >> $TOD_TMP
		ToD
		exit 0

	elif [[ "$prompt" == "eve" ]]; then
		echo "ToD filter will be changed to $prompt"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod $prompt
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_EVE _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_EVE _" >> $TOD_TMP
		ToD
		exit 0

	elif [[ "$prompt" == "night" ]]; then
		echo "ToD filter will be changed to $prompt"
		pause 'Press <CR> to continue...'
		$TASK rc.verbose= rc.confirmation= config tod $prompt
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_NIGHT _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_NIGHT _" >> $TOD_TMP
		ToD
		exit 0
	fi
exit 0
#fi
# ARGS
elif [[ "$1" != "" ]]; then
	# these args cause no changes
	if [[ "$1" == $TOD_CONFIG ]]; then echo "Time of Day is already set to $TOD_CONFIG, no changes made";	exit 0

	elif [[ "$1" =~ h|help ]]; then echo "there is no help for you"
		cat $INSTALL_DIR/tod.txt
		pause 'Press <CR> to continue...'
		exit 0

	# these args DO cause changes
	elif [[ "$1" = "none" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod none
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _ _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _ _" >> $TOD_TMP
		echo "No more ToD filtering (for now)"
		exit 0

	elif [[ "$1" = "morn" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod $1
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_MORN _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_MORN _" >> $TOD_TMP
		echo "ToD filter changed to \"$TOD_CONFIG\" for $REPORT_A and $REPORT_B reports"
		exit 0

	elif [[ "$1" = "aft" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod $1
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_AFT _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_AFT _" >> $TOD_TMP
		echo "ToD filter changed to \"$TOD_CONFIG\" for $REPORT_A and $REPORT_B reports"
		exit 0

	elif [[ "$1" = "day" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod $1
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_DAY _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_DAY _" >> $TOD_TMP
		echo "ToD filter changed to \"$TOD_CONFIG\" for $REPORT_A and $REPORT_B reports"
		exit 0

	elif [[ "$1" = "eve" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod $1
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_EVE _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_EVE _" >> $TOD_TMP
		echo "ToD filter changed to \"$TOD_CONFIG\" for $REPORT_A and $REPORT_B reports"
		exit 0

	elif [[ "$1" = "night" ]]; then
		$TASK rc.verbose= rc.confirmation= config tod $1
		TOD_CONFIG=`task _get rc.tod`
		echo -e "$TMP_HEADER" > $TOD_TMP
		echo -e "$RC_OTHER" >> $TOD_TMP
		echo -e "report.$REPORT_A.filter=$BASE_A _$FIELD_2A _$T_NIGHT _" >> $TOD_TMP
		echo -e "report.$REPORT_B.filter=$BASE_B _$FIELD_2B _$T_NIGHT _" >> $TOD_TMP
		echo "ToD filter changed to \"$TOD_CONFIG\" for $REPORT_A and $REPORT_B reports"
		exit 0
	fi

echo "\"$1\"  is an unrecognized argument\; I don\'t know what you want!"
echo "No changes made"
exit 1
fi
